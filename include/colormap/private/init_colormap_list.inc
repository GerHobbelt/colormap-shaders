/**
 * This file was automatically created with "create_c++_header.sh".
 * Do not edit manually.
 */
list_.push_back(std::make_shared<colormap::IDL::SixteenLevel>());
list_.push_back(std::make_shared<colormap::IDL::Beach>());
list_.push_back(std::make_shared<colormap::IDL::BlackWhiteLinear>());
list_.push_back(std::make_shared<colormap::IDL::BlueGreenRedYellow>());
list_.push_back(std::make_shared<colormap::IDL::BlueRed>());
list_.push_back(std::make_shared<colormap::IDL::BlueRed2>());
list_.push_back(std::make_shared<colormap::IDL::BlueWhiteLinear>());
list_.push_back(std::make_shared<colormap::IDL::BlueWaves>());
list_.push_back(std::make_shared<colormap::IDL::EosA>());
list_.push_back(std::make_shared<colormap::IDL::EosB>());
list_.push_back(std::make_shared<colormap::IDL::GreenPink>());
list_.push_back(std::make_shared<colormap::IDL::GreenWhiteExponential>());
list_.push_back(std::make_shared<colormap::IDL::GreenWhiteLinear>());
list_.push_back(std::make_shared<colormap::IDL::Hardcandy>());
list_.push_back(std::make_shared<colormap::IDL::Haze>());
list_.push_back(std::make_shared<colormap::IDL::HueSatLightness1>());
list_.push_back(std::make_shared<colormap::IDL::HueSatLightness2>());
list_.push_back(std::make_shared<colormap::IDL::HueSatValue1>());
list_.push_back(std::make_shared<colormap::IDL::HueSatValue2>());
list_.push_back(std::make_shared<colormap::IDL::MacStyle>());
list_.push_back(std::make_shared<colormap::IDL::Nature>());
list_.push_back(std::make_shared<colormap::IDL::Ocean>());
list_.push_back(std::make_shared<colormap::IDL::Pastels>());
list_.push_back(std::make_shared<colormap::IDL::Peppermint>());
list_.push_back(std::make_shared<colormap::IDL::Plasma>());
list_.push_back(std::make_shared<colormap::IDL::Prism>());
list_.push_back(std::make_shared<colormap::IDL::PurpleRedStripes>());
list_.push_back(std::make_shared<colormap::IDL::Rainbow>());
list_.push_back(std::make_shared<colormap::IDL::Rainbow2>());
list_.push_back(std::make_shared<colormap::IDL::RedPurple>());
list_.push_back(std::make_shared<colormap::IDL::RedTemperature>());
list_.push_back(std::make_shared<colormap::IDL::StandardGammaII>());
list_.push_back(std::make_shared<colormap::IDL::Steps>());
list_.push_back(std::make_shared<colormap::IDL::SternSpecial>());
list_.push_back(std::make_shared<colormap::MATLAB::Autumn>());
list_.push_back(std::make_shared<colormap::MATLAB::Bone>());
list_.push_back(std::make_shared<colormap::MATLAB::Cool>());
list_.push_back(std::make_shared<colormap::MATLAB::Copper>());
list_.push_back(std::make_shared<colormap::MATLAB::Hot>());
list_.push_back(std::make_shared<colormap::MATLAB::Hsv>());
list_.push_back(std::make_shared<colormap::MATLAB::Jet>());
list_.push_back(std::make_shared<colormap::MATLAB::Parula>());
list_.push_back(std::make_shared<colormap::MATLAB::Pink>());
list_.push_back(std::make_shared<colormap::MATLAB::Spring>());
list_.push_back(std::make_shared<colormap::MATLAB::Summer>());
list_.push_back(std::make_shared<colormap::MATLAB::Winter>());
list_.push_back(std::make_shared<colormap::transform::Apricot>());
list_.push_back(std::make_shared<colormap::transform::Carnation>());
list_.push_back(std::make_shared<colormap::transform::Ether>());
list_.push_back(std::make_shared<colormap::transform::GrayscaleBanded>());
list_.push_back(std::make_shared<colormap::transform::HotMetal>());
list_.push_back(std::make_shared<colormap::transform::LavaWaves>());
list_.push_back(std::make_shared<colormap::transform::Malachite>());
list_.push_back(std::make_shared<colormap::transform::MorningGlory>());
list_.push_back(std::make_shared<colormap::transform::PeanutButterAndJerry>());
list_.push_back(std::make_shared<colormap::transform::PurpleHaze>());
list_.push_back(std::make_shared<colormap::transform::Rainbow>());
list_.push_back(std::make_shared<colormap::transform::Rose>());
list_.push_back(std::make_shared<colormap::transform::Saturn>());
list_.push_back(std::make_shared<colormap::transform::Seismic>());
list_.push_back(std::make_shared<colormap::transform::Space>());
list_.push_back(std::make_shared<colormap::transform::Supernova>());
